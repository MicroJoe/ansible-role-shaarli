server {
	listen 80;
	listen [::]:80;

	server_name {{ shaarli_domain }};
	access_log /var/log/nginx/{{ shaarli_domain }}.access.log;
	error_log /var/log/nginx/{{ shaarli_domain }}.error.log;

{% if letsencrypt_activate %}
	location .well-known {
		root {{ letsencrypt_wellknown }};
	}

{% if letsencrypt_https %}
	location / {
		rewrite ^(.*)$ https://{{ shaarli_domain }}$1 permanent;
	}
}

server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name {{ shaarli_domain }};
	access_log /var/log/nginx/{{ shaarli_domain }}.access.log;
	error_log /var/log/nginx/{{ shaarli_domain }}.error.log;

	ssl on;
	ssl_certificate /etc/letsencrypt/live/{{ letsencrypt_domain }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ letsencrypt_domain }}/privkey.pem;

	include /etc/nginx/snippets/ssl.conf;

{% endif %}
{% endif %}

	root {{ shaarli_base }};

	index index.html index.htm index.nginx-debian.html index.php;

	location ~ /\. {
		# deny access to dotfiles
		access_log off;
		log_not_found off;
		deny all;
	}

	location ~ ~$ {
		# deny access to temp editor files, e.g. "script.php~"
		access_log off;
		log_not_found off;
		deny all;
	}

	location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
		# cache static assets
		expires    max;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
	}

	location = /favicon.ico {
		# serve the Shaarli favicon from its custom location
		alias /var/www/shaarli/images/favicon.ico;
	}

	location / {
		# Slim - rewrite URLs
		try_files $uri /index.php$is_args$args;
	}

	location ~ (index)\.php$ {
		# Slim - split URL path into (script_filename, path_info)
		try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;

		# filter and proxy PHP requests to PHP-FPM
		fastcgi_pass   unix:/var/run/php/php7.3-fpm.sock;
		fastcgi_index  index.php;
		include        fastcgi.conf;
	}

	location ~ \.php$ {
		# deny access to all other PHP scripts
		deny all;
	}
}
